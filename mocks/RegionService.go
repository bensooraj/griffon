// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bensooraj/griffon/mocks (interfaces: RegionService)
//
// Generated by this command:
//
//	mockgen -destination=RegionService.go -package=mocks github.com/bensooraj/griffon/mocks RegionService
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	govultr "github.com/vultr/govultr/v3"
	gomock "go.uber.org/mock/gomock"
)

// MockRegionService is a mock of RegionService interface.
type MockRegionService struct {
	ctrl     *gomock.Controller
	recorder *MockRegionServiceMockRecorder
}

// MockRegionServiceMockRecorder is the mock recorder for MockRegionService.
type MockRegionServiceMockRecorder struct {
	mock *MockRegionService
}

// NewMockRegionService creates a new mock instance.
func NewMockRegionService(ctrl *gomock.Controller) *MockRegionService {
	mock := &MockRegionService{ctrl: ctrl}
	mock.recorder = &MockRegionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegionService) EXPECT() *MockRegionServiceMockRecorder {
	return m.recorder
}

// Availability mocks base method.
func (m *MockRegionService) Availability(arg0 context.Context, arg1, arg2 string) (*govultr.PlanAvailability, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Availability", arg0, arg1, arg2)
	ret0, _ := ret[0].(*govultr.PlanAvailability)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Availability indicates an expected call of Availability.
func (mr *MockRegionServiceMockRecorder) Availability(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Availability", reflect.TypeOf((*MockRegionService)(nil).Availability), arg0, arg1, arg2)
}

// List mocks base method.
func (m *MockRegionService) List(arg0 context.Context, arg1 *govultr.ListOptions) ([]govultr.Region, *govultr.Meta, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]govultr.Region)
	ret1, _ := ret[1].(*govultr.Meta)
	ret2, _ := ret[2].(*http.Response)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// List indicates an expected call of List.
func (mr *MockRegionServiceMockRecorder) List(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockRegionService)(nil).List), arg0, arg1)
}
